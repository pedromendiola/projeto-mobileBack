
//Selecione o database
use('prestadorBase')

// Remove a collection
//db.prestador.drop()

/* Cria a collection com a validação do schema
   Saiba mais em: https://docs.mongodb.com/manual/core/schema-validation/
*/
db.createCollection('prestador', {
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            required: ['nome'],
            properties: {
                nome: {
                    bsonType: 'string',
                    minLength: 3,
                    maxLength: 100,
                    description: 'Nome deve ser um texto entre 3 a 100 caracteres e é obrigatório'
                },
                email: {
                    bsonType: 'string',
                    description: 'Email de contato'
                },
                celular: {
                    bsonType: 'string',
                    description: 'Número do celular'
                },
                servico: {
                    bsonType: 'string',
                    description: 'Serviço prestado'
                },
                obs: {
                    bsonType: 'string',
                    description: 'Observações do serviço'
                },
                ativo: {
                    bsonType: 'bool',
                    description: 'Está ativo?'
                },
                avatar: {
                    bsonType: 'string',
                    description: 'Iniciais do prestador'
                }
                
                }
            }
        
    },
    validationLevel: 'off', //strict-> aplica no insert e no update. moderate apenas no insert or off
    validationAction: 'error' //error->rejeita o documento ou warn->registra no log mas permite a inclusão

})

//Criando um índice único no campo email
db.prestador.createIndex({ 'email': 1 }, { unique: true })

//Insere um novo registro
db.prestador.insertOne({
    "nome": "Aparecida Ribeiro",
    "email": "cida@dog.com.br",
    "celular": "11982674139",
    "servico": "11982674139",
    "obs": "11982674139",
    "ativo": true,
    "avatar": "https://source.unsplash.com/featured/?woman",
})


//Lista um registro pelo Id
db.prestador.find({ '_id': { $eq: ObjectId('61891d38a64a453659f55c56') } })

//Lista um registro por parte do nome (i=insensitive case)
db.prestador.find({ nome: { $regex: 'cida', $options: "i" } })

//Ocultando a coluna senha da listagem
db.prestador.find({}, { senha: 0 })

//Lista um usuário a partir do seu email
db.prestador.find({ email: { $eq: 'mariaalves@uol.com' } })

//Lista um usuário a partir de parte do seu email ou nome
db.prestador.find({
    $or:
        [
            { nome: { $regex: 'alguém', $options: "i" } },
            { email: { $regex: 'uol', $options: "i" } }
        ]
})
